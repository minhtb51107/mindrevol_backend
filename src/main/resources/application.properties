spring.application.name=demo-2
server.port=${PORT:8080}
spring.datasource.url=jdbc:postgresql://localhost:5432/education_db
spring.datasource.username=postgres
spring.datasource.password=511007
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Kích hoạt extension pgvector
# Sử dụng dialect custom 
# spring.jpa.database-platform=com.example.demo.config.PgVectorDialect
# spring.jpa.properties.hibernate.dialect=com.example.demo.config.PgVectorDialect

# Tắt tính năng tự động tạo DDL cho các types mới
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Cho Flyway chạy, nhưng bỏ qua check version database
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.fail-on-unsupported-database=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=binhminh51107@gmail.com
spring.mail.password=hrkmxnjkiegzewzg
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Google Login
spring.security.oauth2.client.registration.google.client-id=758520677856-j98pg9k2fju9545q0ffffmsnr9b1qtk9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.redis.host=localhost
spring.redis.port=6379

logging.level.com.example.demo=DEBUG

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# Async configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# Enable async logging
logging.level.org.springframework.scheduling=DEBUG

# Cohere API Configuration
cohere.api.key=FgnM4jQsMglkgfQ1Cs2Dhrh7oGOnpH8stbxh5K3b
cohere.rerank.model=rerank-multilingual-v3.0

# Re-ranking weights
reranking.weights.semantic=0.5
reranking.weights.recency=0.2
reranking.weights.keyword=0.3

#spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o
#spring.ai.openai.chat.options.temperature=0.7
#spring.ai.openai.embedding.options.model=text-embedding-3-small

openai.api.key=${OPENAI_API_KEY}
openai.api.model=gpt-4o

logging.level.org.springframework.ai=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE

# Cấu hình LC4J (Dùng 1 key duy nhất)
langchain4j.chat-model.provider=open-ai
langchain4j.open-ai.chat-model.api-key=${OPENAI_API_KEY}
langchain4j.open-ai.chat-model.model-name=gpt-4o
langchain4j.open-ai.chat-model.temperature=0.7

langchain4j.embedding-model.provider=open-ai
langchain4j.open-ai.embedding-model.api-key=${OPENAI_API_KEY}

# (Các cấu hình database của bạn...)

# Cấu hình API key cho LangChain4j
langchain4j.openai.api-key=${OPENAI_API_KEY}
# LangChain4J Configuration
langchain4j.open-ai.chat-model.max-tokens=1500
langchain4j.open-ai.api-key=${OPENAI_API_KEY}

# Cấu hình PgVector cho LC4J
langchain4j.embedding-store.type=pgvector
langchain4j.embedding-store.pgvector.host=localhost
langchain4j.embedding-store.pgvector.port=5432
langchain4j.embedding-store.pgvector.database=education_db
langchain4j.embedding-store.pgvector.username=postgres
langchain4j.embedding-store.pgvector.password=511007
langchain4j.embedding-store.pgvector.table=message_embeddings # Tên bảng vector của bạn
langchain4j.embedding-store.pgvector.dimension=1536 # Kích thước của text-embedding-3-small

# Cấu hình kích thước file upload
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# ===============================================
# GUARDRAILS CONFIGURATION
# ===============================================

# Danh sách các chủ đề bị cấm, phân tách bởi dấu phẩy
guardrail.topic.banned=chính trị,tôn giáo,bạo lực,sex,hate speech

# Mẫu Regex để phát hiện thông tin cá nhân (PII)
# Ví dụ này phát hiện: số điện thoại (9-12 chữ số) hoặc email
guardrail.pii.pattern=\\b(\\d{9,12}|\\S+@\\S+\\.\\S+)\\b

# Mở các endpoint cần thiết cho việc giám sát
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.health.show-details=always

# spring.flyway.repair=true