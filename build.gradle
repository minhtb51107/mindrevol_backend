plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
   	mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    // Spring Boot cơ bản
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
 
   implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.google.guava:guava:32.1.3-jre' // hoặc bản mới hơn
    implementation 'io.opencensus:opencensus-api:0.31.1'
    implementation 'org.json:json:20240303'
    implementation 'io.grpc:grpc-context:1.59.0'
    
    implementation "dev.langchain4j:langchain4j:0.35.0"
    implementation "dev.langchain4j:langchain4j-open-ai:0.35.0"
    implementation 'dev.langchain4j:langchain4j-core:0.35.0'
    implementation 'dev.langchain4j:langchain4j-spring-boot-starter:0.35.0'
    implementation("dev.langchain4j:langchain4j-embeddings:0.35.0")
    implementation "dev.langchain4j:langchain4j-pgvector:0.35.0"
    
    implementation 'org.apache.tika:tika-parsers-standard-package:2.9.2' 
    implementation 'dev.langchain4j:langchain4j-document-parser-apache-tika:0.35.0'
    
    //implementation platform("org.springframework.ai:spring-ai-bom:1.1.0-M1")
	//implementation "org.springframework.ai:spring-ai-starter-model-openai"
	//implementation "org.springframework.ai:spring-ai-client-chat"
	//implementation "org.springframework.ai:spring-ai-vector-store"
	//implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	//implementation "org.springframework.ai:spring-ai-pgvector-store"
	//implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'

   
 // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	implementation("org.flywaydb:flyway-database-postgresql")
    
    runtimeOnly 'org.postgresql:postgresql'   // scope=runtime
    implementation 'com.pgvector:pgvector:0.1.5'
    
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
	implementation("com.github.ben-manes.caffeine:caffeine:3.2.2")
    
    // Spring Data Redis với Lettuce client
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // Jackson cho serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // JWT (JJWT)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
 
   runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // PostgreSQL JDBC
    runtimeOnly 'org.postgresql:postgresql'

    // JavaMailSender - dùng để gửi mã xác minh qua email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'    

    // Google ID Token verification
	implementation 'com.google.api-client:google-api-client:2.3.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.35.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.45.1'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.35.0'

    // Unit test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
   
 useJUnitPlatform()
}
